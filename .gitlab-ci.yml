stages:
  - build
  - deploy

variables:
  REPOSITORY_PREFIX: harbor.mock.org/cloudnative/horizon/

before_script:
  - export APP_REVISION="${CI_COMMIT_TAG:-${CI_COMMIT_REF_NAME##*/}-r$CI_PIPELINE_ID}"
  - export CHART_VERSION="${CI_COMMIT_TAG:-v0.0.0-r$CI_PIPELINE_ID}"

build:
  stage: build
  variables:
    DOCKER_CONFIG_JSON: $DOCKER_AUTH_CONFIG_ONLINE
  script:
    - bash build/build.sh || exit 1
  only:
    - develop
    - tags
  except:
    - schedules

helm_package:
  stage: build
  variables:
    REPO_NAME: cloudnative
  script:
    - mkdir -p target && cp -r chart target/$CI_PROJECT_NAME || exit 1
    - helm package --version="$CHART_VERSION" --app-version="$APP_REVISION" -d target target/$CI_PROJECT_NAME || exit 1
    - echo "$CHART_VERSION"
    - |
      REPO_ADDR="$(jq -r '.repo//empty'<<<"$ONLINE_CHART_REPO")"
      USERNAME="$(jq -r '.username//empty'<<<"$ONLINE_CHART_REPO")"
      PASSWORD="$(jq -r '.password//empty'<<<"$ONLINE_CHART_REPO")"

      helm repo add --insecure-skip-tls-verify --username="$USERNAME" \
      --password="$PASSWORD" "$REPO_NAME" "$REPO_ADDR/chartrepo/$REPO_NAME" --force-update
      helm push --insecure target/$(cd target; ls | grep tgz) "$REPO_NAME" || exit 1
  artifacts:
    paths:
      - target/*.tgz
  only:
    - develop
    - tags
  except:
    - schedules

deploy_dev:
  stage: deploy
  variables:
    REPO_NAME: cloudnative
    KUBECONFIG_YAML: $KUBECONFIG_DEV
    NAMESPACE: horizon
    RELEASE_NAME: horizon-backend
  script:
    - ls -l
    - ls -l target/
  only:
    - develop
