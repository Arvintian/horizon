stages:
  - lint
  - unit-test
  - build
  - deploy

variables:
  COVERAGE_STANDARD: 70
  REPOSITORY_PREFIX: harbor.mock.org/cloudnative/horizon/
  GOPROXY: https://goproxycn,direct

before_script:
  - export APP_REVISION="${CI_COMMIT_TAG:-${CI_COMMIT_REF_NAME##*/}-r$CI_PIPELINE_ID}"
  - export CHART_VERSION="${CI_COMMIT_TAG:-v0.0.0-r$CI_PIPELINE_ID}"

golint:
  stage: lint
  script:
    - golangci-lint run
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"

unit-tests:
  stage: unit-test
  script:
    - |
      COVERAGE=$(. .unit-test.sh)
      [[ "$?" == 0 ]] || exit 1
      [[ $(awk -v M=$COVERAGE -v N=$COVERAGE_STANDARD 'BEGIN{print(M>=N)?"0":"1"}') == "0" ]] && \
      echo "coverage is $COVERAGE" || {
        echo "coverage is $COVERAGE, is less than $COVERAGE_STANDARD"; exit 1
      }
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"

build:
  stage: build
  variables:
    DOCKER_CONFIG_JSON: $DOCKER_AUTH_CONFIG_ONLINE
  script:
    - bash build/build.sh || exit 1
  only:
    - develop
    - tags
  except:
    - schedules

helm_package:
  stage: build
  variables:
    REPO_NAME: cloudnative
  script:
    - mkdir -p target && cp -r chart target/$CI_PROJECT_NAME || exit 1
    - helm package --version="$CHART_VERSION" --app-version="$APP_REVISION" -d target target/$CI_PROJECT_NAME || exit 1
    - echo "$CHART_VERSION"
    - |
      REPO_ADDR="$(jq -r '.repo//empty'<<<"$ONLINE_CHART_REPO")"
      USERNAME="$(jq -r '.username//empty'<<<"$ONLINE_CHART_REPO")"
      PASSWORD="$(jq -r '.password//empty'<<<"$ONLINE_CHART_REPO")"

      helm repo add --insecure-skip-tls-verify --username="$USERNAME" \
      --password="$PASSWORD" "$REPO_NAME" "$REPO_ADDR/chartrepo/$REPO_NAME" --force-update
      helm push target/$(cd target; ls | grep tgz) "$REPO_NAME" || exit 1
  only:
    - develop
    - tags
  except:
    - schedules
