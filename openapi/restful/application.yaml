openapi: 3.0.1
info:
  title: Horizon-Application-Restful
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v1/groups/{groupID}/applications:
    parameters:
      - name: groupID
        in: path
        description: group id
        required: true
    post:
      tags:
        - application
      operationId: createApplication
      summary: create a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                  "//name": "name is unique in the whole system, should satisfy the regex pattern: ^[a-z][a-z0-9-]*[a-z]$. And the length of name must less than 53",
                  "name": "app",
                  "description": "xxxxxxxxxxxx",
                  "priority": "P0",
                  "template": {
                    "name": "javaapp",
                    "release": "v1.1.0"
                  },
                  "git": {
                    "url": "ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                    "subfolder": "/",
                    "branch": "develop"
                  },
                  "templateInput":{
                      "application":{
                          "app":{
                              "params":{
                                  "xmx":"512",
                                  "xms":"512",
                                  "maxPerm":"128",
                                  "mainClassName":"com.netease.horizon.WebApplication",
                                  "jvmExtra":"-Dserver.port=8080"
                              },
                              "resource":"x-small",
                              "health":{
                                  "lifecycle":{
                                      "online":{
                                          "url":"/online",
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "retry":20
                                      },
                                      "offline":{
                                          "url":"/offline",
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "retry":20
                                      }
                                  },
                                  "probe":{
                                      "check":{
                                          "url":"/check",
                                          "initialDelaySeconds":200,
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "failureThreshold":3
                                      },
                                      "status":{
                                          "url":"/status",
                                          "initialDelaySeconds":200,
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "failureThreshold":3
                                      }
                                  },
                                  "port":8080
                              }
                          }
                      },
                      "pipeline":{
                          "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                      }
                  }
                }
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/applications/{application}:
    parameters:
      - name: application
        in: path
        description: name of application
        required: true
    put:
      tags:
        - application
      operationId: updateApplication
      summary: update a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                  "description": "xxxxxxxxxxxx",
                  "priority": "P0",
                  "template": {
                    "name": "javaapp",
                    "release": "v1.1.0"
                  },
                  "git": {
                    "url": "ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                    "subfolder": "/",
                    "branch": "develop"
                  },
                  "templateInput":{
                      "application":{
                          "app":{
                              "params":{
                                  "xmx":"512",
                                  "xms":"512",
                                  "maxPerm":"128",
                                  "mainClassName":"com.netease.horizon.WebApplication",
                                  "jvmExtra":"-Dserver.port=8080"
                              },
                              "resource":"x-small",
                              "health":{
                                  "lifecycle":{
                                      "online":{
                                          "url":"/online",
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "retry":20
                                      },
                                      "offline":{
                                          "url":"/offline",
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "retry":20
                                      }
                                  },
                                  "probe":{
                                      "check":{
                                          "url":"/check",
                                          "initialDelaySeconds":200,
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "failureThreshold":3
                                      },
                                      "status":{
                                          "url":"/status",
                                          "initialDelaySeconds":200,
                                          "timeoutSeconds":3,
                                          "periodSeconds":15,
                                          "failureThreshold":3
                                      }
                                  },
                                  "port":8080
                              }
                          }
                      },
                      "pipeline":{
                          "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                      }
                  }
                }
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
      - application
      operationId: getApplication
      summary: get a application
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "//groupID":"the groupID of this application",
                          "groupID":1000,
                          "//name":"name is unique in the whole system, should satisfy the regex pattern: ^[a-z][a-z0-9-]*[a-z]$. And the length of name must less than 53",
                          "name":"app",
                          "description":"xxxxxxxxxxxx",
                          "priority":"P0",
                          "template":{
                              "name":"javaapp",
                              "release":"v1.1.0"
                          },
                          "git":{
                              "url":"ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                              "subfolder":"/",
                              "branch":"develop"
                          },
                          "templateInput":{
                              "application":{
                                  "app":{
                                      "params":{
                                          "xmx":"512",
                                          "xms":"512",
                                          "maxPerm":"128",
                                          "mainClassName":"com.netease.horizon.WebApplication",
                                          "jvmExtra":"-Dserver.port=8080"
                                      },
                                      "resource":"x-small",
                                      "health":{
                                          "lifecycle":{
                                              "online":{
                                                  "url":"/online",
                                                  "timeoutSeconds":3,
                                                  "periodSeconds":15,
                                                  "retry":20
                                              },
                                              "offline":{
                                                  "url":"/offline",
                                                  "timeoutSeconds":3,
                                                  "periodSeconds":15,
                                                  "retry":20
                                              }
                                          },
                                          "probe":{
                                              "check":{
                                                  "url":"/check",
                                                  "initialDelaySeconds":200,
                                                  "timeoutSeconds":3,
                                                  "periodSeconds":15,
                                                  "failureThreshold":3
                                              },
                                              "status":{
                                                  "url":"/status",
                                                  "initialDelaySeconds":200,
                                                  "timeoutSeconds":3,
                                                  "periodSeconds":15,
                                                  "failureThreshold":3
                                              }
                                          },
                                          "port":8080
                                      }
                                  }
                              },
                              "pipeline":{
                                  "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                              }
                          }
                      }
                  }