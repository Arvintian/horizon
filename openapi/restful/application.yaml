openapi: 3.0.1
info:
  title: Horizon-Application-Restful
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v1/groups/{groupID}/applications?extraOwner={extraOwner}:
    parameters:
      - name: groupID
        in: path
        description: group id
        required: true
      - name: extraOwner
        in: query
        description: extra owner's email
        required: false
    post:
      tags:
        - application
      operationId: createApplication
      summary: create a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                    "//name":"name is unique in the whole system, should satisfy the regex pattern: ^[a-z][a-z0-9-]*[a-z]$. And the length of name must less than 53",
                    "name":"app",
                    "description":"xxxxxxxxxxxx",
                    "priority":"P0",
                    "template":{
                        "name":"javaapp",
                        "release":"v1.1.0"
                    },
                    "git":{
                        "url":"ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                        "subfolder":"/",
                        "branch":"develop"
                    },
                    "templateInput":{
                        "application":{
                            "app":{
                                "spec":{
                                    "replicas":1,
                                    "resource":"small"
                                },
                                "strategy":{
                                    "stepsTotal":1,
                                    "pauseType":"first"
                                },
                                "params":{
                                    "xmx":"512",
                                    "xms":"512",
                                    "maxPerm":"128",
                                    "mainClassName":"com.netease.horizon.WebApplication",
                                    "jvmExtra":"-Dserver.port=8080"
                                },
                                "health":{
                                    "check":"/api/test",
                                    "status":"/health/status",
                                    "online":"/health/online",
                                    "offline":"/health/offline",
                                    "port":8080
                                }
                            }
                        },
                        "pipeline":{
                            "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                        }
                    }
                }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "id": 1,
                          "name":"app",
                          "groupID":1000,
                          "fullPath": "/a/b/c",
                          "description":"xxxxxxxxxxxx",
                          "priority":"P0",
                          "template":{
                              "name":"javaapp",
                              "release":"v1.1.0"
                          },
                          "git":{
                              "url":"ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                              "subfolder":"/",
                              "branch":"develop"
                          },
                          "templateInput":{
                              "application":{
                                  "app":{
                                      "spec":{
                                          "replicas":1,
                                          "resource":"small"
                                      },
                                      "strategy":{
                                          "stepsTotal":1,
                                          "pauseType":"first"
                                      },
                                      "params":{
                                          "xmx":"512",
                                          "xms":"512",
                                          "maxPerm":"128",
                                          "mainClassName":"com.netease.horizon.WebApplication",
                                          "jvmExtra":"-Dserver.port=8080"
                                      },
                                      "health":{
                                          "check":"/api/test",
                                          "status":"/health/status",
                                          "online":"/health/online",
                                          "offline":"/health/offline",
                                          "port":8080
                                      }
                                  }
                              },
                              "pipeline":{
                                  "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                              }
                          }
                      }
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/applications/{applicationID}:
    parameters:
      - name: applicationID
        in: path
        description: id of application
        required: true
    put:
      tags:
        - application
      operationId: updateApplication
      summary: update a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                    "description":"xxxxxxxxxxxx",
                    "priority":"P0",
                    "template":{
                        "name":"javaapp",
                        "release":"v1.1.0"
                    },
                    "git":{
                        "url":"ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                        "subfolder":"/",
                        "branch":"develop"
                    },
                    "templateInput":{
                        "application":{
                            "app":{
                                "spec":{
                                    "replicas":1,
                                    "resource":"small"
                                },
                                "strategy":{
                                    "stepsTotal":1,
                                    "pauseType":"first"
                                },
                                "params":{
                                    "xmx":"512",
                                    "xms":"512",
                                    "maxPerm":"128",
                                    "mainClassName":"com.netease.horizon.WebApplication",
                                    "jvmExtra":"-Dserver.port=8080"
                                },
                                "health":{
                                    "check":"/api/test",
                                    "status":"/health/status",
                                    "online":"/health/online",
                                    "offline":"/health/offline",
                                    "port":8080
                                }
                            }
                        },
                        "pipeline":{
                            "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                        }
                    }
                }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "id": 1,
                          "name":"app",
                          "groupID":1000,
                          "fullPath": "/a/b/c",
                          "description":"xxxxxxxxxxxx",
                          "priority":"P0",
                          "template":{
                              "name":"javaapp",
                              "release":"v1.1.0"
                          },
                          "git":{
                              "url":"ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                              "subfolder":"/",
                              "branch":"develop"
                          },
                          "templateInput":{
                              "application":{
                                  "app":{
                                      "spec":{
                                          "replicas":1,
                                          "resource":"small"
                                      },
                                      "strategy":{
                                          "stepsTotal":1,
                                          "pauseType":"first"
                                      },
                                      "params":{
                                          "xmx":"512",
                                          "xms":"512",
                                          "maxPerm":"128",
                                          "mainClassName":"com.netease.horizon.WebApplication",
                                          "jvmExtra":"-Dserver.port=8080"
                                      },
                                      "health":{
                                          "check":"/api/test",
                                          "status":"/health/status",
                                          "online":"/health/online",
                                          "offline":"/health/offline",
                                          "port":8080
                                      }
                                  }
                              },
                              "pipeline":{
                                  "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                              }
                          }
                      }
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
      - application
      operationId: getApplication
      summary: get a application
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "id": 1,
                          "name":"app",
                          "groupID":1000,
                          "fullPath": "/a/b/c",
                          "description":"xxxxxxxxxxxx",
                          "priority":"P0",
                          "template":{
                              "name":"javaapp",
                              "release":"v1.1.0"
                          },
                          "git":{
                              "url":"ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                              "subfolder":"/",
                              "branch":"develop"
                          },
                          "templateInput":{
                              "application":{
                                  "app":{
                                      "spec":{
                                          "replicas":1,
                                          "resource":"small"
                                      },
                                      "strategy":{
                                          "stepsTotal":1,
                                          "pauseType":"first"
                                      },
                                      "params":{
                                          "xmx":"512",
                                          "xms":"512",
                                          "maxPerm":"128",
                                          "mainClassName":"com.netease.horizon.WebApplication",
                                          "jvmExtra":"-Dserver.port=8080"
                                      },
                                      "health":{
                                          "check":"/api/test",
                                          "status":"/health/status",
                                          "online":"/health/online",
                                          "offline":"/health/offline",
                                          "port":8080
                                      }
                                  }
                              },
                              "pipeline":{
                                  "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                              }
                          }
                      }
                  }
    delete:
      tags:
        - application
      operationId: deleteApplication
      summary: delete a application
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v1/applications/{applicationID}/envtemplates?environment={environment}:
    parameters:
      - name: applicationID
        in: path
        description: application id
        required: true
      - name: environment
        in: query
        description: environment
        required: true
    post:
      tags:
        - application
      operationId: updateEnvTemplate
      summary: update a specified env template for an application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                    "application":{
                        "app":{
                            "spec":{
                                "replicas":1,
                                "resource":"small"
                            },
                            "strategy":{
                                "stepsTotal":1,
                                "pauseType":"first"
                            },
                            "params":{
                                "xmx":"512",
                                "xms":"512",
                                "maxPerm":"128",
                                "mainClassName":"com.netease.horizon.WebApplication",
                                "jvmExtra":"-Dserver.port=8080"
                            },
                            "health":{
                                "check":"/api/test",
                                "status":"/health/status",
                                "online":"/health/online",
                                "offline":"/health/offline",
                                "port":8080
                            }
                        }
                    },
                    "pipeline":{
                        "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                    }
                }
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
        - application
      operationId: getEnvTemplate
      summary: get a specified env template for an application
      description: if template for specified env is not exists, return the default template of this application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "application":{
                              "app":{
                                  "spec":{
                                      "replicas":1,
                                      "resource":"small"
                                  },
                                  "strategy":{
                                      "stepsTotal":1,
                                      "pauseType":"first"
                                  },
                                  "params":{
                                      "xmx":"512",
                                      "xms":"512",
                                      "maxPerm":"128",
                                      "mainClassName":"com.netease.horizon.WebApplication",
                                      "jvmExtra":"-Dserver.port=8080"
                                  },
                                  "health":{
                                      "check":"/api/test",
                                      "status":"/health/status",
                                      "online":"/health/online",
                                      "offline":"/health/offline",
                                      "port":8080
                                  }
                              }
                          },
                          "pipeline":{
                              "buildxml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE project [<!ENTITY buildfile SYSTEM \"file:./build-user.xml\">]>\n<project basedir=\".\" default=\"deploy\" name=\"demo\">\n    <property name=\"ant\" value=\"ant\" />\n    <property name=\"baseline.dir\" value=\"${basedir}\"/>\n\n    <target name=\"package\">\n        <exec dir=\"${baseline.dir}\" executable=\"${ant}\" failonerror=\"true\">\n            <arg line=\"-buildfile overmind_build.xml -Denv=test -DenvName=mockserver.org\"/>\n        </exec>\n    </target>\n\n    <target name=\"deploy\">\n        <echo message=\"begin auto deploy......\"/>\n        <antcall target=\"package\"/>\n    </target>\n</project>"
                          }
                      }
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v1/applications/{applicationID}/regions:
    parameters:
      - name: applicationID
        in: path
        description: application id
        required: true
    get:
      tags:
        - application
      operationId: getApplicationRegions
      summary: get default regions for an application
      description: |
        There are different regions for different environments. If the region of an environment is not exists,
        return the default region of this environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "test":{
                              "region":"hz-test",
                              "regionDisplayName":"杭州测试"
                          },
                          "online":{
                              "region":"hz",
                              "regionDisplayName":"杭州（义桥）"
                          }
                      }
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    post:
      tags:
        - application
      operationId: updateApplicationRegions
      summary: update the default regions for an application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                    "test":"hz-test",
                    "online":"hz"
                }
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
