openapi: 3.0.1
info:
  title: Horizon-Application-Restful
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v1/applications:
    post:
      tags:
        - application
      operationId: createApplication
      summary: create a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                  "groupID": 1000,
                  "//name": "name is unique in the whole system, should satisfy the regex pattern: ^[a-z][a-z0-9-]*[a-z]$. And the length of name must less than 53",
                  "name": "app",
                  "description": "xxxxxxxxxxxx",
                  "template": {
                    "name": "javaapp",
                    "release": "v1.1.0"
                  },
                  "git": {
                    "url": "ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                    "subfolder": "/",
                    "branch": "develop"
                  },
                  "templateInput": {
                    "app": {
                      "params": {
                        "xmx": "512",
                        "xms": "512",
                        "maxPerm": "128",
                        "mainClassName": "com.netease.horizon.WebApplication",
                        "jvmExtra": "-Dserver.port=8080"
                      },
                      "resource": "x-small",
                      "health": {
                        "lifecycle": {
                          "online": {
                            "url": "/online",
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "retry": 20
                          },
                          "offline": {
                            "url": "/offline",
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "retry": 20
                          }
                        },
                        "probe": {
                          "check": {
                            "url": "/check",
                            "initialDelaySeconds": 200,
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "failureThreshold": 3
                          },
                          "status": {
                            "url": "/status",
                            "initialDelaySeconds": 200,
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "failureThreshold": 3
                          }
                        },
                        "port": 8080
                      }
                    }
                  },
                  "pipelineInput": {
                    "//type": "build.xml/dockerfile",
                    "type": "build.xml",
                    "//buildxml": "build.xml content with base64 encoded. It's required when type is build.xml",
                    "buildxml": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHByb2plY3QgWzwhRU5USVRZIGJ1aWxkZmlsZSBTWVNURU0gImZpbGU6Li9idWlsZC11c2VyLnhtbCI+XT4KPHByb2plY3QgYmFzZWRpcj0iLiIgZGVmYXVsdD0iZGVwbG95IiBuYW1lPSJkZW1vIj4KICAgIDxwcm9wZXJ0eSBuYW1lPSJhbnQiIHZhbHVlPSJhbnQiIC8+CiAgICA8cHJvcGVydHkgbmFtZT0iYmFzZWxpbmUuZGlyIiB2YWx1ZT0iJHtiYXNlZGlyfSIvPgoKICAgIDx0YXJnZXQgbmFtZT0icGFja2FnZSI+CiAgICAgICAgPGV4ZWMgZGlyPSIke2Jhc2VsaW5lLmRpcn0iIGV4ZWN1dGFibGU9IiR7YW50fSIgZmFpbG9uZXJyb3I9InRydWUiPgogICAgICAgICAgICA8YXJnIGxpbmU9Ii1idWlsZGZpbGUgb3Zlcm1pbmRfYnVpbGQueG1sIC1EZW52PXRlc3QgLURlbnZOYW1lPXFhLWFsbGFuLmlnYW1lLjE2My5jb20iLz4KICAgICAgICA8L2V4ZWM+CiAgICA8L3RhcmdldD4KCiAgICA8dGFyZ2V0IG5hbWU9ImRlcGxveSI+CiAgICAgICAgPGVjaG8gbWVzc2FnZT0iYmVnaW4gYXV0byBkZXBsb3kuLi4uLi4iLz4KICAgICAgICA8YW50Y2FsbCB0YXJnZXQ9InBhY2thZ2UiLz4KICAgIDwvdGFyZ2V0Pgo8L3Byb2plY3Q+",
                    "//dockerfile": "dockerfile, required when type is dockerfile",
                    "dockerfile": {
                      "//type": "dockerfile type, path or content",
                      "type": "path | content",
                      "//path": "dockerfile path in repo",
                      "path": "/path/to/dockerfile",
                      "//content": "dockerfile content",
                      "content": "RlJPTSBodWIuY24tZWFzdC1wMS5uZXRlYXNlLmNvbS9zdGFmZnl1bjE2M211c2ljL2Nsb3VkbmF0aXZlL3Rla3Rvbi9idWlsZGVyOmRldmVsb3AtcjIwMjEwMzMwMTUxMCBhcyBidWlsZGVyCgpDT1BZIC4gL2J1aWxkcwoKV09SS0RJUiAvYnVpbGRzCgpSVU4gbXZuSkRLOCBwYWNrYWdlIC1EbWF2ZW4udGVzdC5za2lwPXRydWUKCkZST00gb3Blbmpkazo4dTE1MS1qZGsKCkNPUFkgLS1mcm9tPWJ1aWxkZXIgL2J1aWxkcy90YXJnZXQvbmRwLWRlcGxveS10ZXMqLmphciBhcHAuamFyCgpDTUQgZXhlYyBqYXZhICRKQVZBX09QVFMgLWphciAvYXBwLmphcg=="
                    }
                  }
                }
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/applications/{application}:
    parameters:
      - name: application
        in: path
        description: name of application
        required: true
    put:
      tags:
        - application
      operationId: updateApplication
      summary: update a application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: |
                {
                  "description": "xxxxxxxxxxxx",
                  "template": {
                    "name": "javaapp",
                    "release": "v1.1.0"
                  },
                  "git": {
                    "url": "ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                    "subfolder": "/",
                    "branch": "develop"
                  },
                  "templateInput": {
                    "app": {
                      "params": {
                        "xmx": "512",
                        "xms": "512",
                        "maxPerm": "128",
                        "mainClassName": "com.netease.horizon.WebApplication",
                        "jvmExtra": "-Dserver.port=8080"
                      },
                      "resource": "x-small",
                      "health": {
                        "lifecycle": {
                          "online": {
                            "url": "/online",
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "retry": 20
                          },
                          "offline": {
                            "url": "/offline",
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "retry": 20
                          }
                        },
                        "probe": {
                          "check": {
                            "url": "/check",
                            "initialDelaySeconds": 200,
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "failureThreshold": 3
                          },
                          "status": {
                            "url": "/status",
                            "initialDelaySeconds": 200,
                            "timeoutSeconds": 3,
                            "periodSeconds": 15,
                            "failureThreshold": 3
                          }
                        },
                        "port": 8080
                      }
                    }
                  },
                  "pipelineInput": {
                    "type": "build.xml",
                    "buildxml": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHByb2plY3QgWzwhRU5USVRZIGJ1aWxkZmlsZSBTWVNURU0gImZpbGU6Li9idWlsZC11c2VyLnhtbCI+XT4KPHByb2plY3QgYmFzZWRpcj0iLiIgZGVmYXVsdD0iZGVwbG95IiBuYW1lPSJkZW1vIj4KICAgIDxwcm9wZXJ0eSBuYW1lPSJhbnQiIHZhbHVlPSJhbnQiIC8+CiAgICA8cHJvcGVydHkgbmFtZT0iYmFzZWxpbmUuZGlyIiB2YWx1ZT0iJHtiYXNlZGlyfSIvPgoKICAgIDx0YXJnZXQgbmFtZT0icGFja2FnZSI+CiAgICAgICAgPGV4ZWMgZGlyPSIke2Jhc2VsaW5lLmRpcn0iIGV4ZWN1dGFibGU9IiR7YW50fSIgZmFpbG9uZXJyb3I9InRydWUiPgogICAgICAgICAgICA8YXJnIGxpbmU9Ii1idWlsZGZpbGUgb3Zlcm1pbmRfYnVpbGQueG1sIC1EZW52PXRlc3QgLURlbnZOYW1lPXFhLWFsbGFuLmlnYW1lLjE2My5jb20iLz4KICAgICAgICA8L2V4ZWM+CiAgICA8L3RhcmdldD4KCiAgICA8dGFyZ2V0IG5hbWU9ImRlcGxveSI+CiAgICAgICAgPGVjaG8gbWVzc2FnZT0iYmVnaW4gYXV0byBkZXBsb3kuLi4uLi4iLz4KICAgICAgICA8YW50Y2FsbCB0YXJnZXQ9InBhY2thZ2UiLz4KICAgIDwvdGFyZ2V0Pgo8L3Byb2plY3Q+",
                    "dockerfile": {
                      "type": "path | content",
                      "path": "/path/to/dockerfile",
                      "content": "RlJPTSBodWIuY24tZWFzdC1wMS5uZXRlYXNlLmNvbS9zdGFmZnl1bjE2M211c2ljL2Nsb3VkbmF0aXZlL3Rla3Rvbi9idWlsZGVyOmRldmVsb3AtcjIwMjEwMzMwMTUxMCBhcyBidWlsZGVyCgpDT1BZIC4gL2J1aWxkcwoKV09SS0RJUiAvYnVpbGRzCgpSVU4gbXZuSkRLOCBwYWNrYWdlIC1EbWF2ZW4udGVzdC5za2lwPXRydWUKCkZST00gb3Blbmpkazo4dTE1MS1qZGsKCkNPUFkgLS1mcm9tPWJ1aWxkZXIgL2J1aWxkcy90YXJnZXQvbmRwLWRlcGxveS10ZXMqLmphciBhcHAuamFyCgpDTUQgZXhlYyBqYXZhICRKQVZBX09QVFMgLWphciAvYXBwLmphcg=="
                    }
                  }
                }
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
      - application
      operationId: getApplication
      summary: get a application
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                    "groupID": 1000,
                    "name": "app",
                    "description": "xxxxxxxxxxxx",
                    "template": {
                      "name": "javaapp",
                      "release": "v1.1.0"
                    },
                    "git": {
                      "url": "ssh://git@g.hz.netease.com:22222/music-cloud-native/horizon/horizon.git",
                      "subfolder": "/",
                      "branch": "develop"
                    },
                    "templateInput": {
                      "app": {
                        "params": {
                          "xmx": "512",
                          "xms": "512",
                          "maxPerm": "128",
                          "mainClassName": "com.netease.horizon.WebApplication",
                          "jvmExtra": "-Dserver.port=8080"
                        },
                        "resource": "x-small",
                        "health": {
                          "lifecycle": {
                            "online": {
                              "url": "/online",
                              "timeoutSeconds": 3,
                              "periodSeconds": 15,
                              "retry": 20
                            },
                            "offline": {
                              "url": "/offline",
                              "timeoutSeconds": 3,
                              "periodSeconds": 15,
                              "retry": 20
                            }
                          },
                          "probe": {
                            "check": {
                              "url": "/check",
                              "initialDelaySeconds": 200,
                              "timeoutSeconds": 3,
                              "periodSeconds": 15,
                              "failureThreshold": 3
                            },
                            "status": {
                              "url": "/status",
                              "initialDelaySeconds": 200,
                              "timeoutSeconds": 3,
                              "periodSeconds": 15,
                              "failureThreshold": 3
                            }
                          },
                          "port": 8080
                        }
                      }
                    },
                    "pipelineInput": {
                      "type": "build.xml",
                      "buildxml": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHByb2plY3QgWzwhRU5USVRZIGJ1aWxkZmlsZSBTWVNURU0gImZpbGU6Li9idWlsZC11c2VyLnhtbCI+XT4KPHByb2plY3QgYmFzZWRpcj0iLiIgZGVmYXVsdD0iZGVwbG95IiBuYW1lPSJkZW1vIj4KICAgIDxwcm9wZXJ0eSBuYW1lPSJhbnQiIHZhbHVlPSJhbnQiIC8+CiAgICA8cHJvcGVydHkgbmFtZT0iYmFzZWxpbmUuZGlyIiB2YWx1ZT0iJHtiYXNlZGlyfSIvPgoKICAgIDx0YXJnZXQgbmFtZT0icGFja2FnZSI+CiAgICAgICAgPGV4ZWMgZGlyPSIke2Jhc2VsaW5lLmRpcn0iIGV4ZWN1dGFibGU9IiR7YW50fSIgZmFpbG9uZXJyb3I9InRydWUiPgogICAgICAgICAgICA8YXJnIGxpbmU9Ii1idWlsZGZpbGUgb3Zlcm1pbmRfYnVpbGQueG1sIC1EZW52PXRlc3QgLURlbnZOYW1lPXFhLWFsbGFuLmlnYW1lLjE2My5jb20iLz4KICAgICAgICA8L2V4ZWM+CiAgICA8L3RhcmdldD4KCiAgICA8dGFyZ2V0IG5hbWU9ImRlcGxveSI+CiAgICAgICAgPGVjaG8gbWVzc2FnZT0iYmVnaW4gYXV0byBkZXBsb3kuLi4uLi4iLz4KICAgICAgICA8YW50Y2FsbCB0YXJnZXQ9InBhY2thZ2UiLz4KICAgIDwvdGFyZ2V0Pgo8L3Byb2plY3Q+",
                      "dockerfile": {
                        "type": "path | content",
                        "path": "/path/to/dockerfile",
                        "content": "RlJPTSBodWIuY24tZWFzdC1wMS5uZXRlYXNlLmNvbS9zdGFmZnl1bjE2M211c2ljL2Nsb3VkbmF0aXZlL3Rla3Rvbi9idWlsZGVyOmRldmVsb3AtcjIwMjEwMzMwMTUxMCBhcyBidWlsZGVyCgpDT1BZIC4gL2J1aWxkcwoKV09SS0RJUiAvYnVpbGRzCgpSVU4gbXZuSkRLOCBwYWNrYWdlIC1EbWF2ZW4udGVzdC5za2lwPXRydWUKCkZST00gb3Blbmpkazo4dTE1MS1qZGsKCkNPUFkgLS1mcm9tPWJ1aWxkZXIgL2J1aWxkcy90YXJnZXQvbmRwLWRlcGxveS10ZXMqLmphciBhcHAuamFyCgpDTUQgZXhlYyBqYXZhICRKQVZBX09QVFMgLWphciAvYXBwLmphcg=="
                      }
                    }
                  }