openapi: 3.0.3
info:
  title: Horizon-OAuth
  description: Horizon-OAuth
  version: 1.0.0
servers:
  - url: 'https://localhost:8080'
paths:
  /login/oauth/authorize:
    get:
      tags:
        - oauth
      parameters:
        - name: client_id
          in: query
          description: the horizon app client_id
          schema:
            type: string
        - name: redirect_url
          in: query
          description: the oauth redirect url after grant
          schema:
            $ref:  "common.yaml#/components/schemas/"
          required: true
        - name: state
          in: query
          description: This should contain a random string to protect against forgery attacks and could contain any other arbitrary data.
          schema:
            type: string
      operationId: requestHorizonUserIdentity
      summary: Request a user's Horizon identity
      responses:
        '200':
          description: "if not grant, return a grant html page"
        '302':
          description: "case1: if not login, redirect to login page; case2: if granted, return redirect url"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    post:
      tags:
        - oauth
      operationId: requestHorizonUserIdentity
      summary: Request a user's Horizon identity
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestHorizonUserIdentityForm'
      responses:
        '302':
          description: "with http response location in header; location is the redirect_url with code and state"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /login/oauth/access_token:
    post:
      tags:
        - oauth
      operationId:  retrieveHorizonUserAccessToken
      summary: retrieve access Token from horizon
      requestBody:
        required: false
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RetrieveHorizonUserAccessTokenForm'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
                example:  |
                  {
                    "access_token": "",
                    "expires_in": 28800,
                    "scope": "",
                    "token_type": "bearer"
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
components:
  schemas:

    RetrieveHorizonUserAccessTokenForm:
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/Client_ID'
        client_secret:
          type: string
        code:
          type: string
        redirect_uri:
          $ref: "common.yaml#/components/schemas/URL"
        state:
          $ref: "#/components/schemas/State"

    RequestHorizonUserIdentityForm:
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/Client_ID'
        redirect_url:
          $ref: '#/components/schemas/Redirect_URL'
        state:
          $ref: '#/components/schemas/State'

    Token:
      type: object
      properties:
        access_token:
          $ref: "#/components/schemas/Access_Token"
        expires_in:
          type: number
          format: uint64
        scope:
          type: string
        token_type:
          type: string

    Access_Token:
      type: string
      description: the access token

    Client_ID:
      type: string
      description: the horizon app client_id

    Redirect_URL:
      description: the oauth redirect url after grant
      $ref: "common.yaml#/components/schemas/URL"

    State:
      description: This should contain a random string to protect against forgery attacks and could contain any other arbitrary data.
      type: string

