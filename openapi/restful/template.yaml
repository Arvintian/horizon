openapi: 3.0.1
info:
  title: Horizon-Template-Restful
  description: Restful API About Template
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v1/templates:
    get:
      tags:
        - template
      operationId: listTemplates
      summary: List all templates
      description: |
        List all available templates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: the template name
                        description:
                          type: string
                          description: the template description
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v1/templates/{template}/releases:
    parameters:
    - name: template
      in: path
      description: name of template
      required: true
    get:
      tags:
        - template
      operationId: listTemplateReleases
      summary: List releases for a specified template
      description: |
        List releases for a specified template. Maybe there are so many releases
        for a template, but this API will only return 3 recently releases. And the most
        recently release is the most recommended release.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: the template release name
                        description:
                          type: string
                          description: the template release description
                        recommended:
                          type: boolean
                          description: is the most recommended release
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"

  /apis/core/v1/templates/{template}/releases/{release}/schema:
    parameters:
    - name: template
      in: path
      description: name of template
      required: true
    - name: release
      in: path
      description: release name of template
      required: true
    get:
      tags:
        - template
      operationId: getTemplateInputSchema
      summary: Get input schema for a specified template
      description: |
        Get input schema for a specified template. This API will return the template's cd.schema.json file and ci.schema.json file.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {
                      "data":{
                          "application":{
                              "jsonSchema": {
                                "type": "object",
                                "properties": {
                                  "app": {
                                    "title": "负载配置",
                                    "type": "object",
                                    "properties": {
                                      "resource":{
                                        "type": "string",
                                        "title": "规格",
                                        "oneOf": [
                                          {
                                            "enum": [
                                              "x-small"
                                            ],
                                            "title": "x-small(1C2G)"
                                          },{
                                            "enum": [
                                              "small"
                                            ],
                                            "title": "small(2C4G)"
                                          },{
                                            "enum": [
                                              "middle"
                                            ],
                                            "title": "middle(4C8G)"
                                          },{
                                            "enum": [
                                              "large"
                                            ],
                                            "title": "large(8C16G)"
                                          },{
                                            "enum": [
                                              "x-large"
                                            ],
                                            "title": "x-large(16C32G)"
                                          }
                                        ]
                                      },
                                      "params": {
                                        "title": "参数",
                                        "type": "object",
                                        "properties": {
                                          "mainClassName": {
                                            "type": "string"
                                          },
                                          "xmx": {
                                            "type": "string",
                                            "default": "512",
                                            "pattern": "^\\d*$"
                                          },
                                          "xms": {
                                            "type": "string",
                                            "default": "512",
                                            "pattern": "^\\d*$"
                                          },
                                          "xdebugAddress": {
                                            "type": "string",
                                            "pattern": "^\\d*$"
                                          },
                                          "jvmExtra": {
                                            "type": "string"
                                          }
                                        },
                                        "required": ["mainClassName"]
                                      },
                                      "health": {
                                        "title": "健康检查",
                                        "type": "object",
                                        "properties": {
                                          "port": {
                                            "type": "integer",
                                            "minimum": 1024,
                                            "maximum": 65535
                                          },
                                          "lifecycle":{
                                            "title": "优雅启停",
                                            "type": "object",
                                            "properties": {
                                              "online":{
                                                "title": "上线",
                                                "description": "上线接口会在应用启动之后进行调用，如果调用失败，则应用启动失败",
                                                "$ref": "#/$defs/lifecycle"
                                              },
                                              "offline":{
                                                "title": "下线",
                                                "description": "下线接口会在应用停止之前进行调用，如果调用失败，则忽略",
                                                "$ref": "#/$defs/lifecycle"
                                              }
                                            }
                                          },
                                          "probe":{
                                            "title": "状态检查",
                                            "type": "object",
                                            "properties": {
                                              "check":{
                                                "title": "存活状态",
                                                "description": "存活状态会在应用运行期间检测应用健康情况，检测失败时会对应用进行重启",
                                                "$ref": "#/$defs/probe"
                                              },
                                              "status":{
                                                "title": "就绪状态",
                                                "description": "就绪状态会在应用运行期间检测应用是否处于上线状态，检测失败时显示下线状态",
                                                "$ref": "#/$defs/probe"
                                              }
                                            }
                                          }
                                        },
                                        "dependencies": {
                                          "lifecycle": ["port"],
                                          "probe": ["port"]
                                        }
                                      }
                                    }
                                  }
                                },

                                "$defs": {
                                  "lifecycle": {
                                    "type": "object",
                                    "properties": {
                                      "url": {
                                        "title": "接口",
                                        "description": "接口路径",
                                        "type": "string"
                                      },
                                      "timeoutSeconds": {
                                        "title": "超时时间",
                                        "description": "请求接口的超时时间(单位为s)",
                                        "type": "integer"
                                      },
                                      "periodSeconds": {
                                        "title": "检测周期",
                                        "description": "连续两次检测之间的时间间隔(单位为s)",
                                        "type": "integer"
                                      },
                                      "retry": {
                                        "title": "重试次数",
                                        "description": "检测失败后重试的次数",
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  "probe": {
                                    "type": "object",
                                    "properties": {
                                      "url": {
                                        "title": "接口",
                                        "description": "接口路径",
                                        "type": "string"
                                      },
                                      "initialDelaySeconds": {
                                        "title": "延迟启动",
                                        "description": "应用启动延迟等待该时间再进行检测",
                                        "type": "integer"
                                      },
                                      "timeoutSeconds": {
                                        "title": "超时时间",
                                        "description": "请求接口的超时时间(单位为s)",
                                        "type": "integer"
                                      },
                                      "periodSeconds": {
                                        "title": "重试次数",
                                        "description": "连续两次检测之间的时间间隔(单位为s)",
                                        "type": "integer"
                                      },
                                      "failureThreshold": {
                                        "title": "失败阈值",
                                        "description": "连续检测失败超过该次数，才认为最终检测失败",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              },
                              "uiSchema":{
                                 "app": {
                                   "ui:order":[
                                     "resource", "params", "health"
                                   ],
                                   "params": {
                                     "ui:order":[
                                       "mainClassName", "*", "xdebugAddress"
                                     ]
                                   },
                                   "health": {
                                     "ui:order":[
                                       "port", "lifecycle", "probe"
                                     ],
                                     "lifecycle":{
                                       "ui:order":[
                                         "online", "offline"
                                       ],
                                       "online":{
                                         "ui:order":[
                                           "url", "*"
                                         ]
                                       },
                                       "offline":{
                                         "ui:order":[
                                           "url", "*"
                                         ]
                                       }
                                     },
                                     "probe":{
                                       "ui:order":[
                                         "check", "status"
                                       ],
                                       "check":{
                                         "ui:order":[
                                           "url", "*"
                                         ]
                                       },
                                       "status":{
                                         "ui:order":[
                                           "url", "*"
                                         ]
                                       }
                                     }
                                   }
                                 }
                               }

                          },
                          "pipeline":{
                              "jsonSchema":{
                                  "type":"object",
                                  "title":"构建",
                                  "properties":{
                                      "buildxml":{
                                          "title":"build.xml",
                                          "type":"string"
                                      }
                                  }
                              },
                              "uiSchema":{
                                 "buildxml":{
                                   "ui:widget": "textarea",
                                   "ui:options": {
                                     "rows": 18
                                   }
                                 }
                              }
                          }
                      }
                  }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
