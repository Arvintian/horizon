openapi: 3.0.1
info:
  title: Horizon-Webhook-Restful
  description: Restful API About Webhook
  version: 1.0.0
servers:
  - url: "http://localhost:8080/"
paths:
  /apis/core/v1/{resourceType}/{resourceID}/webhooks:
    parameters:
      - name: resourceType
        in: path
        description: resource type
        required: true
        enum: ["application", "cluster"]
    post:
      tags:
        - webhook
      operationId: createWebhook
      summary: create a webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateWebhook"
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
        - webhook
      operationId: listWebhooks
      summary: list webhooks
      responses:
        "200":
          description: Succuss
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Webhook"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/webhooks/{webhookID}:
    parameters:
      - name: webhookID
        in: path
        description: webhook id
        required: true
    put:
      tags:
        - webhook
      operationId: updateWebhook
      summary: update a webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateWebhook"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    get:
      tags:
        - webhook
      operationId: getWebhook
      summary: get a webhook
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    delete:
      tags:
        - member
      operationId: deleteWebhook
      summary: delete a webhook
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/webhooks/{webhookID}/logs:
    parameters:
      - name: webhookID
        in: path
        description: webhook id
        required: true
    get:
      tags:
        - webhook
      operationId: listWebhookLogs
      summary: list logs of webhook
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookLogSummary"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/webhooklogs/{webhookLogID}:
    parameters:
      - name: webhookLogID
        in: path
        description: webhook log id
        required: true
    get:
      tags:
        - webhook
      operationId: getWebhookLog
      summary: get a webhook log
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookLog"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v1/webhooklogs/{webhookLogID}/resend:
    parameters:
      - name: webhookLogID
        in: path
        description: webhook log id
        required: true
    get:
      tags:
        - webhook
      operationId: ResendWebhook
      summary: resend a webhook log
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookLog"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
components:
  schemas:
    CreateOrUpdateWebhook:
      type: object
      required: [url, triggers]
      properties:
        enabled:
          $ref: "#/components/schemas/Enabled"
        url:
          $ref: "#/components/schemas/URL"
        sslVerifyEnabled:
          $ref: "#/components/schemas/SslVerifyEnabled"
        description:
          $ref: "#/components/schemas/Description"
        secret:
          $ref: "#/components/schemas/Secret"
        triggers:
          $ref: "#/components/schemas/Triggers"

    Webhook:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        enabled:
          $ref: "#/components/schemas/Enabled"
        url:
          $ref: "#/components/schemas/URL"
        sslVerifyEnabled:
          $ref: "#/components/schemas/SslVerifyEnabled"
        description:
          $ref: "#/components/schemas/Description"
        secret:
          $ref: "#/components/schemas/Secret"
        trigger:
          $ref: "#/components/schemas/Trigger"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        createdBy:
          $ref: "#/components/schemas/User"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"
        updatedBy:
          $ref: "#/components/schemas/User"

    WebhookLogSummary:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        webhookID:
          $ref: "#/components/schemas/ID"
        url:
          $ref: "#/components/schemas/URL"
        status:
          $ref: "#/components/schemas/Status"
        ErrorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        createdBy:
          $ref: "#/components/schemas/User"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"
        updatedBy:
          $ref: "#/components/schemas/User"

    WebhookLog:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ID"
        webhookID:
          $ref: "#/components/schemas/ID"
        url:
          $ref: "#/components/schemas/URL"
        status:
          $ref: "#/components/schemas/Status"
        ErrorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        createdBy:
          $ref: "#/components/schemas/User"
        updatedAt:
          $ref: "#/components/schemas/UpdatedAt"
        updatedBy:
          $ref: "#/components/schemas/User"
        requestHeaders:
          type: string
          description: ""
        requestData:
          type: string
          description: ""
        responseHeaders:
          type: string
          description: ""
        responseBody:
          type: string
          description: ""

    Enabled:
      type: boolean
      description: if webhook enabled
    URL:
      type: string
      description:
    SslVerifyEnabled:
      type: boolean
      description:
    Description:
      type: string
      description:
    Secret:
      type: string
      description:
    Triggers:
      type: array
      items:
        type: string
        enum:
          [
            "*",
            cluster_created,
            cluster_deployed,
            cluster_builddeployed,
            cluster_rollbacked,
            cluster_freed,
            cluster_deleted,
            application_created,
            application_deleted,
            application_transfered,
          ]
      description: "conditions to trigger this webhook"
    CreatedAt:
      type: string
      description:
    UpdatedAt:
      type: string
      description:
    ErrorMessage:
      type: string
      description:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
