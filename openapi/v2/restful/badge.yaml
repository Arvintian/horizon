# Copyright Â© 2023 Horizoncd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.1
info:
  title: Horizon-Badge-Restful
  description: Restful API About Badge
  version: 2.0.0
servers:
  - url: "http://localhost:8080/"
paths:
  /apis/core/v2/{resourceType}/{resourceID}/badges:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramResourceType'
      - $ref: 'common.yaml#/components/parameters/paramResourceID'
    get:
      tags:
        - badge
      operationId: listBadges
      summary: list badges of a resource
      description: |
        Get badges of a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/badge"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    post:
      tags:
        - badge
      operationId: createBadge
      summary: create a badge
      description: |
        Create a badge.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/badgeCreate"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/badge"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
  /apis/core/v2/{resourceType}/{resourceID}/badges/{badgeIDorName}:
    parameters:
      - $ref: 'common.yaml#/components/parameters/paramResourceType'
      - $ref: 'common.yaml#/components/parameters/paramResourceID'
      - name: badgeIDorName
        in: path
        description: badge id or badge name, type is integer or string
        required: true
    get:
      tags:
        - badge
      operationId: getBadge
      summary: get a badge
      description: |
        Get a badge.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/badge"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    put:
      tags:
        - badge
      operationId: updateBadge
      summary: update a badge
      description: |
        Update a badge.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/badgeUpdate"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/badge"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
    delete:
      tags:
        - badge
      operationId: deleteBadge
      summary: delete a badge
      description: |
        Delete a badge.
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"


components:
  #  parameters:
  schemas:
    badgeCreate:
      type: object
      properties:
        name:
          type: string
          description: name of badge
        svgLink:
          type: string
          description: svg link of badge
        redirectLink:
          type: string
          description: redirect link of badge
    badgeUpdate:
      type: object
      properties:
        name:
          type: string
          description: name of badge
        svgLink:
          type: string
          description: svg link of badge
        redirectLink:
          type: string
          description: redirect link of badge
    badge:
      type: object
      properties:
        id:
          type: integer
          description: id of badge
        name:
          type: string
          description: name of badge
        svgLink:
          type: string
          description: svg link of badge
        redirectLink:
          type: string
          description: redirect link of badge
        resourceType:
          type: string
          description: resource type of badge
        resourceID:
          type: integer
          description: resource id of badge
        createdAt:
          type: string
          format: date-time
          description: create time of badge
        updatedAt:
          type: string
          format: date-time
          description: update time of badge

