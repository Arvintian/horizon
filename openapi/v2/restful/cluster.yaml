openapi: 3.0.1
info:
  title: Horizon-Cluster-Restful
  version: 2.0.0
servers:
  - url: 'http://localhost:8080/'
paths:
  /apis/core/v2/cluster/{clusterID}/step:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationID: getClusterStep
      summary: Get step when releasing a cluster by canary release
      description: |
        Get step when releasing a cluster by canary release, only works for argoproj.io.rollout
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example: |
                  {"data":{"index":1,"total":4,"replicas":[1,1,1,1],"manualPaused":false}}
                properties:
                  data:
                    type: object
                    properties:
                      index:
                        type: number
                        description: current release step
                      manualPaused:
                        type: boolean
                        description: whether the cluster paused manually when releasing
                      replicas:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                        description: pods' count for every step
                      total:
                        type: number
                        description: count of all steps

  /apis/core/v2/cluster/{clusterID}/resourcetree:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationID: getClusterResourceTree
      summary: Get resource from k8s in tree format
      description:
        Get resource from k8s in tree format, pod will has a extra field 'podDetail'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      nodes:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            uid:
                              type: string
                              description: uid of resource in k8s
                            kind:
                              type: string
                              description: kind of resource in k8s
                            createdAt:
                              type: string
                              description: creation time of resource
                            health:
                              type: object
                              properties:
                                status:
                                  type: string
                                  description: health status
                            group:
                              type: string
                              description: api group of resource in k8s
                            info:
                              type: array
                              description: some extra info
                              items:
                                type: object
                                example: |
                                  {name: "Revision", value: "Rev:6"}
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                            name:
                              type: string
                              description: name of resource
                            namespace:
                              type: string
                              description: namespace of resource in k8s
                            parentRefs:
                              type: array
                              description: parent references of resource, null if it has no parent.
                              items:
                                type: object
                                example: |
                                  { "group": "argoproj.io", "kind": "Rollout", "namespace": "online-64", "name": "for-argocd-error", "uid": "737218b7-1d44-427b-9f5d-0e5d99bee0d1" }
                            podDetail:
                              type: object
                              description: Shortcut of a pod manifest, exists only if resource is a pod
                              properties:
                                metadata:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    creationTimestamp:
                                      type: string
                                      format: date-time
                                    deletionTimestamp:
                                      type: string
                                      format: date-time
                                    labels:
                                      type: object
                                    annotations:
                                      type: object
                                spec:
                                  type: object
                                  properties:
                                    containers:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          image:
                                            type: string
                                          imagePullPolicy:
                                            type: string
                                          ports:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                containerPort:
                                                  type: integer
                                                protocol:
                                                  type: string
                                          resources:
                                            type: object
                                          volumeMounts:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                mountPath:
                                                  type: string
                                    volumes:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                                          persistentVolumeClaim:
                                            type: object
                                            properties:
                                              claimName:
                                                type: string

  /apis/core/v2/cluster/{clusterID}/buildstatus:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationID: getClusterBuildStatus
      summary: Get build status
      description:
        check whether a building task is running.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      latestPipelinerun:
                        type: object
                        description: last pipelinerun
                        properties:
                          action:
                            type: string
                            description: "type of pipelinerun: builddeploy, deploy, rollback"
                          id:
                            type: number
                            description: id of a latestPipelinerun
                      runningTask:
                        type: object
                        properties:
                          task:
                            type: string
                            description: task running currently
  /apis/core/v2/cluster/{clusterID/status:
    parameters:
      - name: clusterID
        in: path
        description: id of a cluster
        required: true
        schema:
          type: number
    get:
      tags:
        - cluster
      operationID: getClusterStatus
      summary: Get status
      description:
        "check the status of current cluster: healthy, creating, progressing, suspended, manualPaused, notHealthy, notFound, freeing, freed, deleting"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            type: string
                            description: healthy, creating, progressing, suspended, manualPaused, notHealthy, notFound, freeing, freed, deleting

  /apis/core/v2/clusters/{clusterID}/exec:
    parameters:
      - name: clusterID
        in: path
        description: The ID of the cluster
        required: true
    post:
      operationId: execClusterCommand
      summary: Execute a command in specified pods in a cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                podList:
                  type: array
                  items:
                    type: string
                commands:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        result:
                          type: boolean
                        error:
                          type: object
                        stderr:
                          type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "common.yaml#/components/schemas/Error"
