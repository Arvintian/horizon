openapi: 3.0.0
info:
  title: Horizon Group API
  description: |
    This API
  version: 1.0.0
tags:
  - name: group
paths:
  /groups:
    post:
      operationId: createGroup
      summary: Create a group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewGroup"
      responses:
        "201":
          description: null response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /groups/{group}:
    parameters:
      - $ref: "#/components/parameters/groupParam"
    get:
      operationId: getGroupDetail
      summary: get the detail of a group
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupDetail"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    put:
      operationId: updateGroupDetail
      summary: update detail of a group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupDetail'
      responses:
        '200':
          description: Update result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetail'
        default:
          description:  Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      operationId: deleteGroup
      summary: delete an empty group
      responses:
        '200':
          description: null response
        default:
          description:  Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /groups/{group}/subgroups:
    parameters:
      - $ref: "#/components/parameters/groupParam"
      - $ref: "#/components/parameters/searchParam"
    get:
      operationId: listSubGroups
      responses:
        '200':
          description: Return the list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupDetail'
  /groups/{group}/services:
    parameters:
      - $ref: "#/components/parameters/groupParam"
      - $ref: "#/components/parameters/searchParam"
    get:
      operationId: listGroupService
      responses:
        '200':
          description: Return the list of service
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'service.yaml#/components/schemas/serviceDetail'
components:
  parameters:
    groupParam:
      name: group
      in: path
      required: true
      schema:
        type: string
    searchParam:
      name: search
      in: query
      description: Return the list of authorized groups matching the search criteria
      required: false
      schema:
        type: string
  schemas:
    NewGroup:
      type: object
      required:
        - name
        - path
        - visibilityLevel
      properties:
        name:
          $ref: '#/components/schemas/groupName'
        path:
          $ref: '#/components/schemas/groupPath'
        description:
          $ref: '#/components/schemas/GroupDescription'
        visibilityLevel:
          $ref: '#/components/schemas/visibilityLevel'
        parantId:
          $ref: '#/components/schemas/groupId'

    GroupDetail:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/groupId'
        name:
          $ref: '#/components/schemas/groupName'
        path:
          $ref: '#/components/schemas/groupPath'
        description:
          $ref: '#/components/schemas/GroupDescription'
        visibilityLevel:
          $ref: '#/components/schemas/visibilityLevel'
        createTime:
          $ref: '#/components/schemas/date'
    date:
      type: string
      format: date
      pattern: full-date
    groupId:
      type: integer
      format: int64
      description: the parent id of the subgroup,if not provided. a root group
    groupName:
      type: string
      maxLength: 64
      description: the group Name
    groupPath:
      type: string
      maxLength: 1024
      description: the group path
    visibilityLevel:
      type: integer
      format: int32
      enum: [0,1]
      default: 0
      description: 0 means public(every one can see the group), 1 means private one member can see
    GroupDescription:
      type: string
      maxLength: 1024
      description: the group description
    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

